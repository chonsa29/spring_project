<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.MemberMapper">
	<select id="selectMember" parameterType="hashmap" resultType="com.example.demo.model.Member">
		SELECT *
		FROM MEMBER
		WHERE USERID = #{userId}
	</select>
	
	<select id="loginMember" parameterType="hashmap" resultType="com.example.demo.model.Member">
		SELECT *
		FROM MEMBER
		
		WHERE USERID = #{userId} AND PASSWORD = #{password}
	</select>
	
	<insert id="addMember" parameterType="hashmap">
		INSERT INTO MEMBER(USERID, PASSWORD, USERNAME, ADDRESS, EMAIL, EMAIL_VER, BIRTH, GENDER, PHONE, STATUS, CDATETIME, IS_DELETED)
		VALUES(#{userId},#{pwd},#{userName},#{address},#{email},#{emailVer},#{birth},#{gender},#{phoneNum},#{status},SYSDATE,'N')
	</insert>
	
	<!-- 회원 목록 조회 -->
    <select id="selectMemberList" resultType="java.util.LinkedHashMap">
        SELECT 
            USERID AS userId,
            USERNAME AS userName,
            EMAIL AS email,
            PHONE AS phone,
            CDATETIME AS cDate,
            STATUS AS status,
            (SELECT COUNT(*) FROM ORDER_LIST O WHERE O.USERID = M.USERID) AS orderCount
        FROM MEMBER M
        <where>
            <if test="status != null and status != ''">
                AND STATUS = #{status}
            </if>
            <if test="searchType == 'memberId' and searchValue != null">
                AND USERID LIKE '%' || #{searchValue} || '%'
            </if>
            <if test="searchType == 'userName' and searchValue != null">
                AND USERNAME LIKE '%' || #{searchValue} || '%'
            </if>
            <if test="searchType == 'email' and searchValue != null">
                AND EMAIL LIKE '%' || #{searchValue} || '%'
            </if>
        </where>
        ORDER BY CDATETIME DESC
    </select>

    <!-- 회원 상세 정보 -->
    <select id="selectMemberDetail" resultType="java.util.LinkedHashMap">
        SELECT 
           USERID AS userId,
            USERNAME AS userName,
            EMAIL AS email,
            PHONE AS phone,
            ADDRESS AS address,
            CDATETIME AS cDate,
            STATUS AS status,
            POINT AS point
        FROM MEMBER
        WHERE USERID = #{memberId}
    </select>

    <!-- 회원 주문 이력 -->
    <select id="selectMemberOrderHistory" resultType="java.util.LinkedHashMap">
        SELECT 
            ORDER_KEY AS orderKey,
            ORDER_DATE AS orderDate,
            PRICE AS price,
            STATUS AS status
        FROM ORDER_LIST
        WHERE USERID = #{memberId}
        ORDER BY ORDER_DATE DESC
        LIMIT 5
    </select>

    <!-- 회원 정보 수정 -->
    <update id="updateMember">
        UPDATE MEMBER
        SET 
            USERNAME = #{userName},
            EMAIL = #{email},
            PHONE = #{phone},
            ADDRESS = #{address},
        WHERE USERID = #{memberId}
    </update>

    <!-- 회원 상태 변경 -->
    <update id="updateMemberStatus">
        UPDATE MEMBER
        SET STATUS = #{status}
        WHERE USERID = #{memberId}
    </update>
</mapper>